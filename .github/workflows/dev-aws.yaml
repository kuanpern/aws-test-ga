name: Build & Push to Amazon ECR

on:
  workflow_dispatch:
  push:
    branches: [ "dev" ]

env:
  AWS_REGION:     ap-southeast-1
  ECR_REPOSITORY: lambda-listen-s3-creation-dev
  ROLE_TO_ASSUME: arn:aws:iam::858070140421:role/github-action-ecr-power-wtf
  ROLE_SESSION_NAME: pushTestLambdaSession
  LAMBDA_NAME      : test-container-01

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ env.ROLE_TO_ASSUME }}
        role-session-name: ${{ env.ROLE_SESSION_NAME }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        aws ecr describe-repositories --repository-names ${ECR_REPOSITORY} || aws ecr create-repository --repository-name ${ECR_REPOSITORY}
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        IMAGE_SHA=`docker inspect --format='{{index .RepoDigests 0}}' $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG | awk 'BEGIN{FS="@"}{print $2}'`
        echo "::set-output name=image_sha::$IMAGE_SHA"
    - name: Update Lambda image and publish new version
      id: update-lambda
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_SHA: ${{ steps.build-image.outputs.image_sha }}
      run: |
        aws lambda update-function-code \
          --function-name ${{ env.LAMBDA_NAME }} \
          --image-uri $ECR_REGISTRY/$ECR_REPOSITORY@$IMAGE_SHA \
          --publish
